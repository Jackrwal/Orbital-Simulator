<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"> <!-- xmlns:local="clr-namespace:OrbitalSimulator.Resources.Styles"-->

    <!--Main Menu Button Style-->
    <Style x:Name="MenuButton" TargetType="{x:Type Button}" x:Key="Buttun_Menu">

        <!--Set Foreground color and margin-->
        <Setter Property="Foreground"      Value="{StaticResource ColourBrush_ActiveWhite}"/>
        <Setter Property="Margin"          Value="0,2,0,2"/>

        <!--Set the template for this style-->
        <Setter Property="Template">
            <Setter.Value>
                <!--The Template is a control template. for a type button-->
                <ControlTemplate TargetType="{x:Type Button}">

                    <!--Create a border for the button-->
                    <Border x:Name="MenuButton_Border" 
                            BorderThickness="0.5" 
                            BorderBrush="{StaticResource GradientBrush_MenuBorder}" 
                            MaxHeight="60" 
                            MaxWidth="300"
                            Margin="0,1,0,1"
                            >

                        <!--Use a grid to arrange content-->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="3*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!--the background, and a view box (which adapts content size with button size)-->
                            <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Grid.ColumnSpan="3" Grid.RowSpan="3" Fill="#00000000"/>
                            <Viewbox Grid.Row="1" Grid.Column="1">
                                <!--View box contains the buttons text content-->
                                <TextBlock x:Name="MenuButton_Text" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <!--Triggers set of certain animations when diffferent events occure-->
                    <ControlTemplate.Triggers>

                        <!--Hover Trigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled"   Value="True"/>
                            </MultiTrigger.Conditions>

                            <!--Hover Animations-->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.400" Storyboard.TargetName="MenuButton_Border" Storyboard.TargetProperty="BorderThickness" To="3" />
                                        <ThicknessAnimation Duration="0:0:1.000" Storyboard.TargetName="MenuButton_Border" Storyboard.TargetProperty="BorderThickness" To="2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.200" Storyboard.TargetName="MenuButton_Border" Storyboard.TargetProperty="BorderThickness" To="0.5" FillBehavior="Stop"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                        <!--Click Trigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsEnabled"   Value="True"/>
                            </MultiTrigger.Conditions>

                            <!--Click Animations-->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.500" Storyboard.TargetName="MenuButton_Border" Storyboard.TargetProperty="BorderThickness" To="4" />
                                        <ThicknessAnimation Duration="0:0:0.900" Storyboard.TargetName="MenuButton_Border" Storyboard.TargetProperty="BorderThickness" To="2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.200" Storyboard.TargetName="MenuButton_Border" Storyboard.TargetProperty="BorderThickness" To="1" FillBehavior="Stop"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                        <!--Set foreground color depending on if button is enabled-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"      Value="{StaticResource ColourBrush_InactiveGrey}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Foreground"      Value="{StaticResource ColourBrush_ActiveWhite}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Delete Button-->
    <Style x:Name="DeleteButton" TargetType="{x:Type Button}" x:Key="Button_Delete">

    </Style>

</ResourceDictionary>